name: CI/CD Next.js with Docker to VPS

on:
  push:
    branches:
      - main
      - develop

env:
  IMAGE_NAME: ghcr.io/<YOUR_GITHUB_USERNAME>/<YOUR_REPO_NAME> # sửa lại tên repo thực tế

jobs:
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.ref_name }}  # main hoặc develop
            type=sha

      - name: Build & Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy to VPS
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 22
          script: |
            set -e

            # Set ENV
            BRANCH=${{ github.ref_name }}
            APP_DIR="~/projects/capstone/homecare-360-fe"
            GIT_REPO="git@github.com:<YOUR_USERNAME>/<YOUR_REPO_NAME>.git"
            ENV_FILE=".env.${BRANCH}"

            echo "➡️ Deploying branch $BRANCH..."

            # Clone if not exists
            mkdir -p "$APP_DIR"
            cd "$APP_DIR"

            if [ ! -d ".git" ]; then
              echo "🚀 Cloning repo..."
              git clone "$GIT_REPO" . || true
            fi

            echo "🔄 Pulling latest code..."
            git fetch origin
            git checkout "$BRANCH"
            git reset --hard origin/"$BRANCH"

            echo "📦 Pulling image from GHCR..."
            docker compose -f docker-compose.yml --env-file $ENV_FILE pull

            echo "🧹 Stopping previous containers..."
            docker compose -f docker-compose.yml --env-file $ENV_FILE down

            echo "🚀 Starting containers..."
            docker compose -f docker-compose.yml --env-file $ENV_FILE up -d

            echo "✅ Deploy completed for $BRANCH"

  health-check:
    name: Health Check
    needs: deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
      - name: Wait for app to start
        run: sleep 10

      - name: Health check
        run: |
          URL=""

          if [[ "${{ github.ref_name }}" == "main" ]]; then
            URL="https://your-production-domain.com"
          elif [[ "${{ github.ref_name }}" == "develop" ]]; then
            URL="https://your-staging-domain.com"
          fi

          echo "🌐 Checking $URL"
          curl -fsS --retry 3 "$URL" > /dev/null
